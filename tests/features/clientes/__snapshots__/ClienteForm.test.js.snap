// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ClienteDetailsPage /> renders <ClienteForm /> 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Segment>
    <form
        className="ui form clientes-cliente-form"
        onSubmit={undefined}
    >
        <Field
            component={[Function]}
            fluid={true}
            format={[Function]}
            label="Nombre"
            name="nombre"
            parse={[Function]}
        />
        <Divider />
        <Button
            as="button"
            className="clientes-cliente-form-submit"
            disabled={undefined}
            role="button"
            type="submit"
        >
            Enviar
        </Button>
    </form>
</Segment>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <form
        className="ui form clientes-cliente-form"
        onSubmit={undefined}
>
        <Field
                component={[Function]}
                fluid={true}
                format={[Function]}
                label="Nombre"
                name="nombre"
                parse={[Function]}
        />
        <Divider />
        <Button
                as="button"
                className="clientes-cliente-form-submit"
                disabled={undefined}
                role="button"
                type="submit"
        >
                Enviar
        </Button>
</form>,
      "className": "ui segment",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Field
            component={[Function]}
            fluid={true}
            format={[Function]}
            label="Nombre"
            name="nombre"
            parse={[Function]}
/>,
          <Divider />,
          <Button
            as="button"
            className="clientes-cliente-form-submit"
            disabled={undefined}
            role="button"
            type="submit"
>
            Enviar
</Button>,
        ],
        "className": "ui form clientes-cliente-form",
        "onSubmit": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "fluid": true,
            "format": [Function],
            "label": "Nombre",
            "name": "nombre",
            "parse": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "as": "button",
            "children": "Enviar",
            "className": "clientes-cliente-form-submit",
            "disabled": undefined,
            "role": "button",
            "type": "submit",
          },
          "ref": null,
          "rendered": "Enviar",
          "type": [Function],
        },
      ],
      "type": "form",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form
          className="ui form clientes-cliente-form"
          onSubmit={undefined}
>
          <Field
                    component={[Function]}
                    fluid={true}
                    format={[Function]}
                    label="Nombre"
                    name="nombre"
                    parse={[Function]}
          />
          <Divider />
          <Button
                    as="button"
                    className="clientes-cliente-form-submit"
                    disabled={undefined}
                    role="button"
                    type="submit"
          >
                    Enviar
          </Button>
</form>,
        "className": "ui segment",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Field
              component={[Function]}
              fluid={true}
              format={[Function]}
              label="Nombre"
              name="nombre"
              parse={[Function]}
/>,
            <Divider />,
            <Button
              as="button"
              className="clientes-cliente-form-submit"
              disabled={undefined}
              role="button"
              type="submit"
>
              Enviar
</Button>,
          ],
          "className": "ui form clientes-cliente-form",
          "onSubmit": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "fluid": true,
              "format": [Function],
              "label": "Nombre",
              "name": "nombre",
              "parse": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "as": "button",
              "children": "Enviar",
              "className": "clientes-cliente-form-submit",
              "disabled": undefined,
              "role": "button",
              "type": "submit",
            },
            "ref": null,
            "rendered": "Enviar",
            "type": [Function],
          },
        ],
        "type": "form",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
